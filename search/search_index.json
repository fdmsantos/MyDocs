{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My Personal Docks MkDocs Work In Progress","title":"Home"},{"location":"#welcome-to-my-personal-docks-mkdocs","text":"Work In Progress","title":"Welcome to My Personal Docks MkDocs"},{"location":"elk/admin/","text":"Deploy Docker-compose git clone https://github.com/maxyermayank/docker-compose-elasticsearch-kibana Know Errors Max virtual memory Desc: Max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144] sudo sysctl -w vm.max_map_count=262144 Forbidden Index x-read-only-allow-delete-api Link PUT .kibana/_settings { \"index\": { \"blocks\": { \"read_only_allow_delete\": \"false\" } } }","title":"Administration"},{"location":"elk/admin/#deploy","text":"","title":"Deploy"},{"location":"elk/admin/#docker-compose","text":"git clone https://github.com/maxyermayank/docker-compose-elasticsearch-kibana","title":"Docker-compose"},{"location":"elk/admin/#know-errors","text":"","title":"Know Errors"},{"location":"elk/admin/#max-virtual-memory","text":"Desc: Max virtual memory areas vm.max_map_count [65530] likely too low, increase to at least [262144] sudo sysctl -w vm.max_map_count=262144","title":"Max virtual memory"},{"location":"elk/admin/#forbidden-index-x-read-only-allow-delete-api","text":"Link PUT .kibana/_settings { \"index\": { \"blocks\": { \"read_only_allow_delete\": \"false\" } } }","title":"Forbidden Index x-read-only-allow-delete-api"},{"location":"elk/beats/","text":"Beats Creating Custom Creating New Beat Examples Know Errors bash: mage: command not found Use vendoring We recommend to use vendoring for your beat. This means the dependencies are put into your beat folder. The beats team currently uses govendor for vendoring. govendor init govendor update +e This will create a directory vendor inside your repository. To make sure all dependencies for the Makefile commands are loaded from the vendor directory, find the following line in your Makefile: ES_BEATS=${GOPATH}/src/github.com/elastic/beats Replace it with: ES_BEATS=./vendor/github.com/elastic/beats To Fetch: govendor fetch github.com/vmware/govmomi/^ +out","title":"Beats"},{"location":"elk/beats/#beats","text":"","title":"Beats"},{"location":"elk/beats/#creating-custom","text":"Creating New Beat Examples","title":"Creating Custom"},{"location":"elk/beats/#know-errors","text":"bash: mage: command not found","title":"Know Errors"},{"location":"elk/beats/#use-vendoring","text":"We recommend to use vendoring for your beat. This means the dependencies are put into your beat folder. The beats team currently uses govendor for vendoring. govendor init govendor update +e This will create a directory vendor inside your repository. To make sure all dependencies for the Makefile commands are loaded from the vendor directory, find the following line in your Makefile: ES_BEATS=${GOPATH}/src/github.com/elastic/beats Replace it with: ES_BEATS=./vendor/github.com/elastic/beats To Fetch: govendor fetch github.com/vmware/govmomi/^ +out","title":"Use vendoring"},{"location":"elk/kibana/","text":"Time Series Filters performancemanager.virtualmachines.metric.info.metric: \"cpu.usagemhz.average\" AND NOT performancemanager.virtualmachines.metric.sample.instance: \"*\" AND performancemanager.hosts.metric.sample.instance: \"*\" Timelion Expression .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metric.sample.value,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.provisioned.latest\").divide(1000000000).label(\"Disk Provisioned [TB]\").color(black).lines(fill=1,width=2).title(\"Capacity Assessment\"), .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metaData.Storage.Capacity,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.provisioned.latest\").divide(1000000000000).label(\"Total Capacity [TB]\").color(yellow).lines(fill=2,width=2), .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metric.sample.value,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.used.latest\").divide(1000000000).label(\"Disk Used [TB]\").color(green).lines(fill=3,width=1), .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metaData.Storage.Capacity,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.provisioned.latest\").divide(1000000000000).multiply(1.1).label(\"Provisioning Threshold [TB]\").color(red).lines(fill=0,width=3),","title":"Kibana"},{"location":"elk/kibana/#time-series","text":"","title":"Time Series"},{"location":"elk/kibana/#filters","text":"performancemanager.virtualmachines.metric.info.metric: \"cpu.usagemhz.average\" AND NOT performancemanager.virtualmachines.metric.sample.instance: \"*\" AND performancemanager.hosts.metric.sample.instance: \"*\"","title":"Filters"},{"location":"elk/kibana/#timelion","text":"","title":"Timelion"},{"location":"elk/kibana/#expression","text":".es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metric.sample.value,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.provisioned.latest\").divide(1000000000).label(\"Disk Provisioned [TB]\").color(black).lines(fill=1,width=2).title(\"Capacity Assessment\"), .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metaData.Storage.Capacity,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.provisioned.latest\").divide(1000000000000).label(\"Total Capacity [TB]\").color(yellow).lines(fill=2,width=2), .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metric.sample.value,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.used.latest\").divide(1000000000).label(\"Disk Used [TB]\").color(green).lines(fill=3,width=1), .es(index=vspherebeat-emp-imopolis-*, timefield=performancemanager.datastoresclusters.metric.sample.timestamp, metric=sum:performancemanager.datastoresclusters.metaData.Storage.Capacity,q=\"performancemanager.datastoresclusters.metric.info.metric: disk.provisioned.latest\").divide(1000000000000).multiply(1.1).label(\"Provisioning Threshold [TB]\").color(red).lines(fill=0,width=3),","title":"Expression"},{"location":"elk/queries/","text":"Cluster Health GET /_cluster/health Allocation Errors Explain GET /_cluster/allocation/explain Nodes Stats GET /_nodes/stats Indices List GET /_cat/indices?v List with selected Column GET /_cat/indices?h=creation.date.string Create POST /{index}/_open Close POST /_all/_close Search All GET /vspherebeat/_search { \"query\": { \"match_all\": {} } } Field Match string GET /vspherebeat/_search { \"query\": { \"match\" : { \"performancemanager.hosts.metaData.name\": \"nsvwsdv001.mngt.local\" } } } Field doesn't match string GET /vspherebeat/_search { \"query\": { \"bool\": { \"must_not\": [ { \"match\": { \"performancemanager.virtualmachines.metaData.name\": \"WSTPMNGT007\" } } ] } } } Bool Query (Match and Not Match) GET /vspherebeat/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"performancemanager.virtualmachines.metaData.name\": \"APM-Server\" } }, { \"match\": { \"performancemanager.virtualmachines.metric.info.metric\": \"cpu.usage.average\" } } ], \"must_not\": [ { \"match\": { \"performancemanager.virtualmachines.metric.sample.instance\": \"*\" } } ] } } } Exists Specified Field GET /vspherebeat/_search { \"query\": { \"exists\": { \"field\": \"performancemanager.hosts\" } } } Unique Values from a field GET vspherebeat/_search { \"size\":\"0\", \"aggs\" : { \"uniq_hotsr\" : { \"terms\" : { \"field\" : \"performancemanager.hosts.metaData.name\" } } } } Total of unique values from a field GET /vspherebeat/_search { \"size\" : 0, \"aggs\" : { \"distinct_hots\" : { \"cardinality\" : { \"field\" : \"performancemanager.hosts.metaData.name\" } } } } Help Get Indices Columns GET /_cat/indices?help","title":"ESQueries"},{"location":"elk/queries/#cluster","text":"","title":"Cluster"},{"location":"elk/queries/#health","text":"GET /_cluster/health","title":"Health"},{"location":"elk/queries/#allocation-errors-explain","text":"GET /_cluster/allocation/explain","title":"Allocation Errors Explain"},{"location":"elk/queries/#nodes","text":"","title":"Nodes"},{"location":"elk/queries/#stats","text":"GET /_nodes/stats","title":"Stats"},{"location":"elk/queries/#indices","text":"","title":"Indices"},{"location":"elk/queries/#list","text":"GET /_cat/indices?v","title":"List"},{"location":"elk/queries/#list-with-selected-column","text":"GET /_cat/indices?h=creation.date.string","title":"List with selected Column"},{"location":"elk/queries/#create","text":"POST /{index}/_open","title":"Create"},{"location":"elk/queries/#close","text":"POST /_all/_close","title":"Close"},{"location":"elk/queries/#search","text":"","title":"Search"},{"location":"elk/queries/#all","text":"GET /vspherebeat/_search { \"query\": { \"match_all\": {} } }","title":"All"},{"location":"elk/queries/#field-match-string","text":"GET /vspherebeat/_search { \"query\": { \"match\" : { \"performancemanager.hosts.metaData.name\": \"nsvwsdv001.mngt.local\" } } }","title":"Field Match string"},{"location":"elk/queries/#field-doesnt-match-string","text":"GET /vspherebeat/_search { \"query\": { \"bool\": { \"must_not\": [ { \"match\": { \"performancemanager.virtualmachines.metaData.name\": \"WSTPMNGT007\" } } ] } } }","title":"Field doesn't match string"},{"location":"elk/queries/#bool-query-match-and-not-match","text":"GET /vspherebeat/_search { \"query\": { \"bool\": { \"must\": [ { \"match\": { \"performancemanager.virtualmachines.metaData.name\": \"APM-Server\" } }, { \"match\": { \"performancemanager.virtualmachines.metric.info.metric\": \"cpu.usage.average\" } } ], \"must_not\": [ { \"match\": { \"performancemanager.virtualmachines.metric.sample.instance\": \"*\" } } ] } } }","title":"Bool Query (Match and Not Match)"},{"location":"elk/queries/#exists-specified-field","text":"GET /vspherebeat/_search { \"query\": { \"exists\": { \"field\": \"performancemanager.hosts\" } } }","title":"Exists Specified Field"},{"location":"elk/queries/#unique-values-from-a-field","text":"GET vspherebeat/_search { \"size\":\"0\", \"aggs\" : { \"uniq_hotsr\" : { \"terms\" : { \"field\" : \"performancemanager.hosts.metaData.name\" } } } }","title":"Unique Values from a field"},{"location":"elk/queries/#total-of-unique-values-from-a-field","text":"GET /vspherebeat/_search { \"size\" : 0, \"aggs\" : { \"distinct_hots\" : { \"cardinality\" : { \"field\" : \"performancemanager.hosts.metaData.name\" } } } }","title":"Total of unique values from a field"},{"location":"elk/queries/#help","text":"","title":"Help"},{"location":"elk/queries/#get-indices-columns","text":"GET /_cat/indices?help","title":"Get Indices Columns"},{"location":"elk/snapshotsAndRestore/","text":"Snapshot Config Change parameter in elastic search config file for all nodes The path.repo needs to be a shared folder beetween the cluster path.repo: [\"/usr/share/elasticsearch/snapshots\"] Create PUT /_snapshot/{repository}/{snapshot}?wait_for_completion=true List all Snapshots from a repo GET /_cat/snapshots/{repository}?v&s=id Delete DELETE /_snapshot/{repository}/{snapshot} Repositories Create PUT /_snapshot/my_backup { \"type\": \"fs\", \"settings\": { \"location\": \"/usr/share/elasticsearch/snapshots/backup\" } } List GET /_cat/repositories?v GET /_snapshot/_all Delete DELETE /_snapshot/{repository} Restore Restore - Official Doc Restore From Snapshot POST /_snapshot/{repository}/{snapshot}/_restore","title":"Snapshots&Restore"},{"location":"elk/snapshotsAndRestore/#snapshot","text":"","title":"Snapshot"},{"location":"elk/snapshotsAndRestore/#config","text":"Change parameter in elastic search config file for all nodes The path.repo needs to be a shared folder beetween the cluster path.repo: [\"/usr/share/elasticsearch/snapshots\"]","title":"Config"},{"location":"elk/snapshotsAndRestore/#create","text":"PUT /_snapshot/{repository}/{snapshot}?wait_for_completion=true","title":"Create"},{"location":"elk/snapshotsAndRestore/#list-all-snapshots-from-a-repo","text":"GET /_cat/snapshots/{repository}?v&s=id","title":"List all Snapshots from a repo"},{"location":"elk/snapshotsAndRestore/#delete","text":"DELETE /_snapshot/{repository}/{snapshot}","title":"Delete"},{"location":"elk/snapshotsAndRestore/#repositories","text":"","title":"Repositories"},{"location":"elk/snapshotsAndRestore/#create_1","text":"PUT /_snapshot/my_backup { \"type\": \"fs\", \"settings\": { \"location\": \"/usr/share/elasticsearch/snapshots/backup\" } }","title":"Create"},{"location":"elk/snapshotsAndRestore/#list","text":"GET /_cat/repositories?v GET /_snapshot/_all","title":"List"},{"location":"elk/snapshotsAndRestore/#delete_1","text":"DELETE /_snapshot/{repository}","title":"Delete"},{"location":"elk/snapshotsAndRestore/#restore","text":"Restore - Official Doc","title":"Restore"},{"location":"elk/snapshotsAndRestore/#restore-from-snapshot","text":"POST /_snapshot/{repository}/{snapshot}/_restore","title":"Restore From Snapshot"}]}